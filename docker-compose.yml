version: "3.8"

services:
  app:
    build: ./php
    container_name: laravel_app
    restart: unless-stopped
    user: "${UID}:${GID}"
    working_dir: /var/www
    volumes:
      - ./app:/var/www
    depends_on:
      - mongo
      - elasticsearch
    networks:
      - laravel_network

  webserver:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel_network

  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: unless-stopped
    env_file:
      - ./app/.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_DATABASE}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - laravel_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    networks:
      - laravel_network

  vue:
    image: node:latest
    container_name: vue_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev"
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge

